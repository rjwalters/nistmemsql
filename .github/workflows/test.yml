name: Tests and Coverage

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:  # Allow manual triggering

permissions:
  contents: read  # Read-only permissions

jobs:
  # Shared build job - builds once and uploads artifacts for reuse by conformance-tests
  # This eliminates duplicate compilation of the same code.
  # Cache key "rust-ci-cache" is shared across all workflows for consistency.
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive  # For third_party/sqltest

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Cache Rust dependencies and build artifacts
        uses: Swatinem/rust-cache@v2
        with:
          shared-key: "rust-ci-cache"  # Shared with benchmarks.yml and deploy-demo.yml

      - name: Build workspace in release mode
        run: cargo build --workspace --release --all-targets

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: rust-build-artifacts
          path: |
            target/release/
            target/.rustc_info.json
          retention-days: 1

  rust-tests:
    runs-on: ubuntu-latest
    # Note: Does not depend on build job because cargo-llvm-cov must recompile
    # with instrumentation. Only benefits from Rust dependency caching.

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive  # For third_party/sqltest

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Cache Rust dependencies and build artifacts
        uses: Swatinem/rust-cache@v2
        with:
          shared-key: "rust-ci-cache"

      - name: Install cargo-llvm-cov
        uses: taiki-e/install-action@cargo-llvm-cov

      - name: Run all tests with coverage
        run: cargo llvm-cov --workspace --lcov --output-path lcov.info

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: lcov.info
          fail_ci_if_error: false
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Upload coverage HTML
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: target/llvm-cov/html/

  conformance-tests:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Cache Rust dependencies and build artifacts
        uses: Swatinem/rust-cache@v2
        with:
          shared-key: "rust-ci-cache"

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: rust-build-artifacts
          path: target/

      - name: Run SQLLogicTest suite
        run: cargo test --test sqllogictest_runner --release -- --nocapture

      - name: Run sqltest conformance suite
        run: cargo test --test sqltest_conformance --release -- --nocapture

      - name: Upload test results
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: target/sqltest_results.json
        if: always()

      - name: Generate conformance report
        run: |
          chmod +x scripts/generate_compliance_report.sh
          ./scripts/generate_compliance_report.sh
        if: always()

      - name: Upload conformance report
        uses: actions/upload-artifact@v4
        with:
          name: conformance-report
          path: docs/SQL1999_CONFORMANCE.md
        if: always()
