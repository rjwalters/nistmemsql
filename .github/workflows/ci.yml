name: CI

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  # ============================================================================
  # Fast CI for branches/PRs - optimized for speed
  # ============================================================================
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Cache Rust dependencies
        uses: Swatinem/rust-cache@v2
        with:
          shared-key: "rust-ci-cache"

      - name: Run unit tests
        run: cargo test --release --lib

      - name: Run integration tests
        run: cargo test --release --test '*'
        continue-on-error: false

  # ============================================================================
  # Quick benchmarks - just 1k tests for fast feedback
  # ============================================================================
  benchmark:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Cache Rust dependencies
        uses: Swatinem/rust-cache@v2
        with:
          shared-key: "rust-ci-cache"

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install uv
        uses: astral-sh/setup-uv@v3

      - name: Build and install Python bindings
        run: |
          uv pip install --system maturin
          cd crates/python-bindings
          maturin build --release
          uv pip install --system ../../target/wheels/nistmemsql_py-*.whl

      - name: Install benchmark dependencies
        run: |
          grep -v "^nistmemsql" benchmarks/requirements.txt > /tmp/requirements-ci.txt
          uv pip install --system -r /tmp/requirements-ci.txt

      - name: Run quick benchmarks (1k tests only)
        working-directory: benchmarks
        run: |
          pytest test_insert.py test_update.py test_delete.py test_select.py test_aggregates.py \
            --benchmark-only \
            --benchmark-json=../benchmark_results.json \
            --benchmark-min-rounds=3 \
            --benchmark-warmup=off

      - name: Display benchmark summary
        run: |
          echo "## Quick Benchmark Results (1k tests)" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          python benchmarks/format_results.py benchmark_results.json >> $GITHUB_STEP_SUMMARY
