name: Performance Benchmarks

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  benchmark:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Cache Rust dependencies and build artifacts
        uses: Swatinem/rust-cache@v2
        with:
          shared-key: "rust-ci-cache"

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
          cache-dependency-path: benchmarks/requirements.txt

      - name: Build and install Python bindings
        run: |
          pip install maturin
          cd crates/python-bindings
          maturin build --release
          pip install ../../target/wheels/nistmemsql_py-*.whl

      - name: Install benchmark dependencies
        run: |
          # Install requirements except nistmemsql (already installed from wheel)
          grep -v "^nistmemsql" benchmarks/requirements.txt > /tmp/requirements-ci.txt
          pip install -r /tmp/requirements-ci.txt

      - name: Run benchmarks
        working-directory: benchmarks
        run: |
          pytest test_micro_benchmarks.py \
            --benchmark-only \
            --benchmark-json=../benchmark_results.json \
            --benchmark-min-rounds=5 \
            --benchmark-warmup=on

      - name: Download baseline benchmarks (for PRs)
        if: github.event_name == 'pull_request'
        continue-on-error: true
        run: |
          # Try to download baseline from main branch artifacts
          gh run download \
            --repo ${{ github.repository }} \
            --branch main \
            --name benchmark-results \
            --dir baseline \
            || echo "No baseline found, skipping regression check"
        env:
          GH_TOKEN: ${{ github.token }}

      - name: Check for performance regressions
        if: github.event_name == 'pull_request' && hashFiles('baseline/benchmark_results.json') != ''
        run: python benchmarks/check_regression.py benchmark_results.json baseline/benchmark_results.json
        continue-on-error: true

      - name: Upload benchmark results
        uses: actions/upload-artifact@v4
        with:
          name: benchmark-results
          path: benchmark_results.json
          retention-days: 90

      - name: Display results summary
        run: |
          echo "## Benchmark Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          python benchmarks/format_results.py benchmark_results.json >> $GITHUB_STEP_SUMMARY
