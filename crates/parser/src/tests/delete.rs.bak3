use super::*;

// ========================================================================
// DELETE Statement Tests
// ========================================================================

#[test]
fn test_parse_delete_basic() {
    let result = Parser::parse_sql("DELETE FROM users WHERE id = 1;");
    assert!(result.is_ok());
    let stmt = result.unwrap();

    match stmt {
        ast::Statement::Delete(delete) => {
            assert_eq!(delete.table_name, "USERS");
            assert!(delete.where_clause.is_some());
        }
        _ => panic!("Expected DELETE statement"),
    }
}

#[test]
fn test_parse_delete_no_where() {
    let result = Parser::parse_sql("DELETE FROM users;");
    assert!(result.is_ok());
    let stmt = result.unwrap();

    match stmt {
        ast::Statement::Delete(delete) => {
            assert_eq!(delete.table_name, "USERS");
            assert!(delete.where_clause.is_none());
        }
        _ => panic!("Expected DELETE statement"),
    }
}
